#
# qmake configuration for building with arm-linux-g++
#


include(../common/g++-unix.conf)
include(../common/linux.conf)
include(../common/qws.conf)
CONFIG      = qt warn_on release link_prl ashmem android
QT          += core gui android

NDK_ROOT = $$(ANDROID_NDK_ROOT)
isEmpty( NDK_ROOT ) : NDK_ROOT = /usr/local/android-ndk-r5

NDK_HOST = $$(ANDROID_NDK_HOST)
isEmpty( NDK_HOST ) : NDK_HOST = linux-x86

NDK_TOOLCHAIN_PREFIX = $$(ANDROID_NDK_TOOLCHAIN_PREFIX)
isEmpty( NDK_TOOLCHAIN_PREFIX ) : NDK_TOOLCHAIN_PREFIX = arm-linux-androideabi

NDK_TOOLCHAIN_VERSION = $$(ANDROID_NDK_TOOLCHAIN_VERSION)
isEmpty( NDK_TOOLCHAIN_VERSION ) : NDK_TOOLCHAIN_VERSION = 4.4.3

ANDROID_PLATFORM = $$(ANDROID_NDK_PLATFORM)
isEmpty( ANDROID_PLATFORM ) : ANDROID_PLATFORM = android-4 # 4 - android 1.6
                                                           # 5 - android 2.0 & 2.1
                                                           # 8 - android 2.2
                                                           # 9 - android 2.3

NDK_TOOLCHAIN = $$NDK_TOOLCHAIN_PREFIX-$$NDK_TOOLCHAIN_VERSION
NDK_TOOLCHAIN_PATH=$$NDK_ROOT/toolchains/$$NDK_TOOLCHAIN/prebuilt/$$NDK_HOST


CONFIG		       += $$ANDROID_PLATFORM
ANDROID_PLATFORM_ROOT_PATH  = $$NDK_ROOT/platforms/$$ANDROID_PLATFORM/arch-arm/
ANDROID_PLATFORM_PATH  = $$ANDROID_PLATFORM_ROOT_PATH/usr

ANDROID_SOURCES_CXX_STL_LIBDIR = $$NDK_ROOT/sources/cxx-stl/gnu-libstdc++/libs/armeabi
ANDROID_SOURCES_CXX_STL_INCDIR = $$NDK_ROOT/sources/cxx-stl/gnu-libstdc++/include $$ANDROID_SOURCES_CXX_STL_LIBDIR/include

# modifications to g++.conf
QMAKE_CC                = $$NDK_TOOLCHAIN_PATH/bin/$$NDK_TOOLCHAIN_PREFIX-gcc
QMAKE_CFLAGS            = -Wno-psabi -march=armv5te -mtune=xscale -msoft-float -fpic -mthumb -ffunction-sections -funwind-tables -fstack-protector -fno-short-enums -DANDROID -D__ARM_ARCH_5__ -D__ARM_ARCH_5T__ -D__ARM_ARCH_5E__ -D__ARM_ARCH_5TE__ -Wa,--noexecstack
#QMAKE_CFLAGS            = -Wno-psabi -march=armv7-a -mfloat-abi=softfp -mfpu=vfp -mfpu=neon -fpic -mthumb -ffunction-sections -funwind-tables -fstack-protector -fno-short-enums -DANDROID -D__ARM_ARCH_5__ -D__ARM_ARCH_5T__ -D__ARM_ARCH_5E__ -D__ARM_ARCH_5TE__ 

QMAKE_CFLAGS_WARN_ON    = -Wall -W
QMAKE_CFLAGS_WARN_OFF   =
QMAKE_CFLAGS_RELEASE    = -Os -g -fomit-frame-pointer -fno-strict-aliasing -finline-limit=64 
QMAKE_CFLAGS_DEBUG      = -O0 -g -fno-omit-frame-pointer
QMAKE_CFLAGS_SHLIB      = -fPIC
QMAKE_CFLAGS_YACC       = -Wno-unused -Wno-parentheses
QMAKE_CFLAGS_THREAD     = -D_REENTRANT
QMAKE_CFLAGS_HIDESYMS   = -fvisibility=hidden

QMAKE_CXX               = $$NDK_TOOLCHAIN_PATH/bin/$$NDK_TOOLCHAIN_PREFIX-g++
QMAKE_CXXFLAGS          = $$QMAKE_CFLAGS -DQT_NO_QWS_TRANSFORMED
QMAKE_CXXFLAGS_WARN_ON	= $$QMAKE_CFLAGS_WARN_ON
QMAKE_CXXFLAGS_WARN_OFF	= $$QMAKE_CFLAGS_WARN_OFF
QMAKE_CXXFLAGS_RELEASE	+= $$QMAKE_CFLAGS_RELEASE
QMAKE_CXXFLAGS_DEBUG	+= $$QMAKE_CFLAGS_DEBUG
QMAKE_CXXFLAGS_SHLIB	= $$QMAKE_CFLAGS_SHLIB
QMAKE_CXXFLAGS_YACC     = $$QMAKE_CFLAGS_YACC
QMAKE_CXXFLAGS_THREAD	= $$QMAKE_CFLAGS_THREAD
QMAKE_CXXFLAGS_HIDESYMS = $$QMAKE_CFLAGS_HIDESYMS -fvisibility-inlines-hidden

QMAKE_LINK              = $$QMAKE_CXX
QMAKE_LINK_SHLIB        = $$QMAKE_LINK

# modifications to linux.conf
QMAKE_AR                = $$NDK_TOOLCHAIN_PATH/bin/$$NDK_TOOLCHAIN_PREFIX-ar cqs
QMAKE_OBJCOPY           = $$NDK_TOOLCHAIN_PATH/bin/$$NDK_TOOLCHAIN_PREFIX-objcopy
QMAKE_STRIP             = $$NDK_TOOLCHAIN_PATH/bin/$$NDK_TOOLCHAIN_PREFIX-strip
QMAKE_RANLIB            = $$NDK_TOOLCHAIN_PATH/bin/$$NDK_TOOLCHAIN_PREFIX-ranlib

QMAKE_INCDIR            = $$ANDROID_PLATFORM_PATH/include $$ANDROID_SOURCES_CXX_STL_INCDIR
QMAKE_LIBDIR            = $$ANDROID_SOURCES_CXX_STL_LIBDIR $$ANDROID_PLATFORM_PATH/lib
QMAKE_INCDIR_X11        =
QMAKE_LIBDIR_X11        =
QMAKE_INCDIR_QT		= $$[QT_INSTALL_HEADERS]
QMAKE_LIBDIR_QT		= $$[QT_INSTALL_LIBS]
QMAKE_INCDIR_OPENGL     = $$ANDROID_PLATFORM_PATH/include
QMAKE_LIBDIR_OPENGL     = $$ANDROID_PLATFORM_PATH/lib
QMAKE_INCDIR_QTOPIA     =
QMAKE_LIBDIR_QTOPIA     =

LIBGCC_PATH     = $$system($$QMAKE_CC -mthumb-interwork -print-libgcc-file-name | xargs dirname)
#LIBSTDCPP_PATH  = $$system($$QMAKE_CC -mthumb-interwork -print-file-name=libstdc++.a | xargs dirname)

QMAKE_LINK              = $$QMAKE_CXX
QMAKE_LINK_SHLIB        = $$QMAKE_CXX
#QMAKE_LFLAGS            = -nostdlib -Wl,-rpath-link=$$ANDROID_PLATFORM_PATH/lib -L$$LIBGCC_PATH -L$$LIBSTDCPP_PATH -Wl,-rpath=/data/local/qt/lib -Wl,-rpath=/data/local/lib -Wl,-rpath=/system/lib
QMAKE_LFLAGS            = --sysroot=$$ANDROID_PLATFORM_ROOT_PATH -L$$LIBGCC_PATH -Wl,-rpath-link=$$ANDROID_PLATFORM_PATH/lib 
#QMAKE_LFLAGS_RELEASE   =
#QMAKE_LFLAGS_RELEASE   = -Wl,--fix-cortex-a8
#QMAKE_LFLAGS_DEBUG     =
QMAKE_LFLAGS_APP        = 
QMAKE_LFLAGS_SHLIB      = -Wl,--no-undefined -Wl,-z,noexecstack -shared 
QMAKE_LFLAGS_PLUGIN     = $$QMAKE_LFLAGS_SHLIB
QMAKE_LFLAGS_SONAME     = 
#-Wl,-soname,
#QMAKE_LFLAGS_THREAD     =
QMAKE_LFLAGS_NOUNDEF    =  -Wl,--no-undefined
QMAKE_LFLAGS_RPATH      =  -Wl,-rpath=/data/local/qt/lib -Wl,-rpath=/data/local/lib -Wl,-rpath=/system/lib


QMAKE_LIBS              = -lstdc++ -lsupc++ -llog -lz -lm -ldl -lc -lgcc
QMAKE_LIBS_X11          =
QMAKE_LIBS_X11SM        =
QMAKE_LIBS_QT_THREAD    =
QMAKE_LIBS_QT_OPENGL    =
QMAKE_LIBS_QTOPIA       =
QMAKE_LIBS_THREAD       =
QMAKE_LIBS_EGL          =
QMAKE_LIBS_OPENGL       =
QMAKE_LIBS_OPENGL_QT    =
QMAKE_LIBS_OPENGL_ES1   = -lGLESv1_CM
QMAKE_LIBS_OPENGL_ES2   = -lGLESv2 $$QMAKE_LIBS

load(qt_config)
