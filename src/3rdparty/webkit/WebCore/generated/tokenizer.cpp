/*
 * Copyright (C) 2003 Lars Knoll (knoll@kde.org)
 *
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

/* This file is mostly data generated by flex. Unfortunately flex
   can't handle 16bit strings directly, so we just copy the part of
   the code we need and modify it to our needs.

   Most of the defines below are to make sure we can easily use the
   flex generated code, using as little editing as possible.

   The flex syntax to generate the lexer are more or less directly
   copied from the CSS2.1 specs, with some fixes for comments and
   the important symbol.

   To regenerate, run flex on tokenizer.flex. After this, copy the
   data tables and the YY_DECL method over to this file. Remove the
   init code from YY_DECL and change the YY_END_OF_BUFFER to only call
   yyterminate().

*/

// --------- begin generated code -------------------


#include "CSSGrammar.h"

#define INITIAL 0
#define mediaquery 1
#define forkeyword 2

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined __STDC_VERSION__ && __STDC_VERSION__ >= 199901L
#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t;
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;
#endif /* ! C99 */
#define YY_NUM_RULES 69
#define YY_END_OF_BUFFER 70
static yyconst short int yy_accept[482] =
    {   0,
        0,    0,    0,    0,    0,    0,   70,   68,    2,    2,
       68,   68,   68,   68,   68,   68,   68,   68,   68,   68,
       57,   68,   68,   68,   68,   15,   15,   15,   68,   68,
       67,   15,   15,   15,   66,   15,    2,    0,    0,    0,
       14,    0,    0,    0,    0,   18,   18,    8,    0,    0,
        9,    0,   16,    0,    0,   15,   15,   15,   58,    0,
       56,    0,    0,   57,    0,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   16,   55,   55,   52,   55,
        0,    0,    0,   35,   35,   35,   35,   35,   35,   35,
       15,   15,    7,   63,   15,    0,    0,   15,   15,    0,

       15,    6,    5,   15,   15,   15,   15,    0,    0,    0,
       14,    0,    0,    0,   18,   18,   18,    0,   18,    0,
        0,   14,    0,    0,    4,   15,    0,    0,   55,   55,
       55,    0,   55,   42,   55,   37,   40,   55,   53,   44,
       55,   43,   51,   55,   46,   45,   41,   55,   55,   55,
        0,   35,   35,   35,   35,    0,   35,   35,   35,   35,
       35,   35,   15,   15,   15,   16,   15,   15,   64,   64,
       15,   12,   10,   15,   13,    0,    0,    0,   17,   18,
       18,   18,   17,    0,    0,   15,    0,    1,   55,   55,
       55,   55,   47,   55,   54,   16,   48,   38,   55,    3,

       35,   35,   35,   35,   35,   35,   35,   35,   35,   35,
       15,   15,   59,    0,   64,   64,   64,   63,   11,    0,
        0,    0,   18,   18,   18,    0,   15,    0,    0,   55,
       55,   55,   49,   50,   35,   35,   35,   35,   35,   35,
       35,   35,   20,   15,   15,   65,   64,   64,   64,   64,
        0,    0,    0,    0,   61,    0,    0,    0,    0,   18,
       18,   18,    0,   15,   55,   55,   39,   35,   35,   35,
       35,   35,   35,   21,   35,   15,   15,   65,   64,   64,
       64,   64,   64,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   61,    0,    0,    0,    0,   17,   18,   18,

       17,    0,   15,   55,   55,   35,   35,   35,   35,   35,
       19,   35,   15,   15,   65,   64,   64,   64,   64,   64,
       64,    0,   60,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   18,   18,    0,   15,
       55,   55,   35,   35,   35,   23,   35,   35,   15,   65,
       64,   64,   64,   64,   64,   64,   64,    0,   60,    0,
        0,    0,   60,    0,    0,    0,    0,   18,   15,   55,
       35,   35,   35,   35,   65,    0,    0,    0,   36,   15,
       35,   35,   35,   35,   35,   35,   22,   24,   65,    0,
        0,    0,   15,   35,   35,   35,   35,   35,   35,    0,

        0,    0,   63,   35,   35,   35,   35,   35,   35,   35,
       35,    0,    0,    0,    0,    0,    0,   35,   35,   35,
       35,   25,   35,   35,   35,    0,    0,    0,   62,    0,
        0,   26,   35,   35,   35,   35,   27,   35,    0,    0,
        0,    0,   31,   35,   35,   35,   35,    0,    0,    0,
       35,   35,   35,   35,    0,    0,   35,   35,   29,   35,
        0,    0,   35,   33,   35,   30,    0,    0,   35,   28,
       35,    0,   35,   35,   35,   35,   34,   35,   35,   32,
        0
    } ;

static yyconst int yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    4,    5,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    6,    7,    8,    9,   10,   11,   12,   13,   14,
       15,   16,   17,   12,   18,   19,   20,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   12,   22,   23,
       24,   25,   26,   27,   31,   32,   33,   34,   35,   36,
       37,   38,   39,   40,   41,   42,   43,   44,   45,   46,
       47,   48,   49,   50,   51,   52,   53,   54,   55,   56,
       12,   28,   12,   29,   30,   12,   31,   32,   33,   34,

       35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
       45,   46,   47,   48,   49,   50,   51,   52,   53,   54,
       55,   56,   57,   58,   12,   59,    1,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,

       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60,   60,   60,   60,   60,   60,
       60,   60,   60,   60,   60
    } ;

static yyconst int yy_meta[61] =
    {   0,
        1,    2,    3,    3,    3,    4,    5,    5,    5,    5,
        5,    5,    5,    6,    7,    5,    5,    8,    5,    5,
        9,    5,    5,    5,    5,   10,    5,   11,    5,   11,
       12,   12,   12,   12,   12,   12,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,    5,    5,    5,   11
    } ;

static yyconst short int yy_base[520] =
    {   0,
        0,    0,   39,   41, 1591, 1590, 1625, 2401,   62,   71,
       76,   61,   69, 1588,   78, 1587,   50,   89, 1583, 1580,
      132, 1579,   91,  123, 1561,   85,   94,  104, 1560, 1559,
     2401,  117,  176,  175, 2401,  177,  193,  204, 1539,  108,
     2401,  242,  120,  180,  196, 1553,  205, 2401,  101,  277,
     2401,  102,   75, 1555,  221,  112,  206,  234,  181, 1561,
     1565, 1547, 1553,    0,  268,  119, 1545,  221,   60,  240,
      223,  230,  244,  257,  278,  279,  286,  256, 1533,  264,
     1542,  298,  297, 1523,  296,  190,  292,  231,   97,  294,
      309,  350, 2401, 2401,  329,  327, 1524,  351,  352,  372,

      359, 2401, 2401,  360,  361,  381,  362, 1496,  339,  341,
      342,  422,  457,  400, 1513,  492, 1512,  448,  483,  409,
      364,  386,  527,  562, 2401,  435, 1523,  245, 1498,  597,
     1497,  518,  368, 1483,  363, 1481, 1479,  310, 1478, 1477,
      289, 1474, 1463,  239, 1440, 1432, 1428,  385,  401,  369,
     1436,  311, 1425,  632, 1422,  553,  410,  420,  424,  411,
      423,  440,  588,  458,  667, 1420,  626,  459,  481, 1403,
      492,  494,  507,  627,  528, 1382,  412,  658,  674,  683,
     1398,  718,  709,  544,  725,  563, 1368, 2401,  734, 1348,
      769,  474, 1324,  477, 1314,  482, 1313, 1305,  548, 2401,

      414,  760, 1289,  804,  578,  484,  582,  508,  509,  510,
      795,  811, 2401,  820,  552, 1290, 1272,  855,  554, 1197,
      841,  857,  863,  879,  885,  901,  647, 1228,  455,  907,
      923,  614, 1191, 1123,  611,  929,  945,  628,  551,  630,
      515,  631, 1115,  951,  967,  973,  555, 1109, 1101, 1093,
     1008, 1022,  668,  684, 2401, 1049, 1061, 1008, 1040, 1057,
     1065, 1073, 1081,  634, 1089, 1097, 1067,  577, 1105, 1113,
      579,  615,  683, 1041,  685, 1121, 1129, 1137,  708, 1041,
      991,  965,  947,  774,  719,  782, 1172,  735, 1207, 1186,
     1219, 1246, 1260, 1287, 1322,  876, 1246, 2401, 1278, 1313,

      854, 1330,  805, 1338, 1346,  770, 1354, 1362,  771,  580,
      822,  584, 1397, 1383, 1399,  710,  792,  712,  711,  661,
      659,  809, 2401,  877,  754, 1434, 1461, 1496, 1019,  821,
     1442, 1531, 1566, 1440,  639, 1487,  921, 1522, 1557,  851,
      965, 1574,  707, 1301, 1582,  618,  616,  617, 1617, 1603,
      562, 2401, 2401, 2401, 2401, 2401, 2401, 1475,  858,  859,
     1619, 1654,  917,  918, 1640, 1656,  521, 1482,  961, 1510,
     1652, 1544,  646,  836, 1675, 1681, 1697, 1703, 2401, 1017,
      873,  874,  962,  853, 1021,  701,  513,  473, 2401, 1719,
     1725, 1741, 1005, 1150,  419,  919,  992, 1018, 1139, 1747,

     1763, 1769, 1804, 1154, 1020, 1030, 1040, 1131, 1167,  901,
     1187, 1792, 1808, 1831, 1403, 1829, 1851,  820, 1059,  967,
      920,  472,  789, 1201, 1185, 1865, 1892, 1281, 2401, 1871,
     1869,  448, 1202, 1225,  736,  946,  390,  585, 1906, 1908,
     1943, 1970,  388, 1190, 1218, 1227, 1156, 1929, 1951, 1949,
     1266, 1303,  990, 1304, 1976, 1992, 1394, 1169,  340, 1248,
     1998, 2014, 1312,  316, 1203, 1242, 2020, 2036, 1340,  265,
     1151, 2042, 1229, 1423, 1424, 1395,   92, 1382, 1364,   34,
     2401, 2077, 2082, 2093, 2098, 2103, 2112, 2119, 2130, 2139,
     2144, 2155, 2167, 2169, 2178, 2183, 2192, 2197, 2206, 2215,

     2227, 2236, 2245, 2250, 2262, 2267, 2278, 2283, 2294, 2305,
     2316, 2321, 2332, 2343, 2348, 2359, 2368, 2379, 2388
    } ;

static yyconst short int yy_def[520] =
    {   0,
      481,    1,    1,    1,    1,    1,  481,  481,  481,  481,
      481,  482,  483,  481,  484,  481,  481,  485,  481,  481,
      481,  481,  486,  487,  481,  488,  488,  488,  481,  481,
      481,  488,  488,  488,  481,  488,  481,  481,  481,  482,
      481,  489,  483,  481,  490,  491,  491,  481,  484,  492,
      481,  481,  481,  481,  487,  488,  488,  488,   21,  493,
      481,  494,  481,   21,  495,  496,  496,  496,  496,  496,
      496,  496,  496,  496,  496,  496,  496,  496,  496,  496,
      481,  486,  497,  498,  498,  498,  498,  498,  498,  498,
      488,  488,  481,  481,  488,  499,  481,  488,  488,  481,

      488,  481,  481,  488,  488,  488,  488,  481,  482,  482,
      482,  482,  489,  481,  491,   47,  491,  500,   47,  484,
      484,  484,  484,  492,  481,  488,  493,  501,  496,  496,
      496,  502,  496,  496,  496,  496,  496,  496,  496,  496,
      496,  496,  496,  496,  496,  496,  496,  496,  496,  496,
      481,  498,  498,  498,  498,  503,  498,  498,  498,  498,
      498,  498,   92,  488,   92,  481,  488,  488,  504,  481,
      488,  488,  488,  488,  488,  481,  482,  112,  481,  116,
      491,  116,   47,  484,  123,  488,  505,  481,  130,  496,
      130,  496,  496,  496,  496,  496,  496,  496,  496,  481,

      498,  154,  498,  154,  498,  498,  498,  498,  498,  498,
       92,  165,  481,  481,  506,  481,  481,  507,  488,  481,
      112,  481,  116,  182,   47,  123,  488,  505,  501,  130,
      191,  496,  496,  496,  498,  154,  204,  498,  498,  498,
      498,  498,  498,   92,  165,  481,  508,  481,  481,  481,
      507,  507,  509,  510,  481,  511,  481,  112,  481,  116,
      182,   47,  123,  488,  130,  191,  496,  498,  154,  204,
      498,  498,  498,  498,  498,   92,  165,  481,  512,  481,
      481,  481,  481,  481,  509,  481,  513,  510,  514,  507,
      507,  507,  507,  507,  511,  481,  112,  481,  116,  182,

      491,  123,  488,  130,  191,  498,  154,  204,  498,  498,
      498,  498,  488,  165,  481,  515,  481,  481,  481,  481,
      481,  481,  481,  509,  509,  509,  509,  513,  510,  510,
      510,  510,  514,  294,  481,  112,  491,  182,  123,  488,
      496,  191,  498,  498,  204,  498,  498,  498,  488,  481,
      481,  481,  481,  481,  481,  481,  481,  509,  509,  509,
      327,  510,  510,  510,  332,  294,  481,  491,  488,  496,
      498,  498,  498,  498,  481,  327,  332,  294,  481,  488,
      498,  498,  498,  498,  498,  498,  498,  498,  481,  327,
      332,  294,  488,  498,  498,  498,  498,  498,  498,  327,

      332,  294,  516,  498,  498,  498,  498,  498,  498,  498,
      498,  327,  332,  516,  414,  517,  518,  498,  498,  498,
      498,  498,  498,  498,  498,  518,  518,  481,  481,  518,
      519,  498,  498,  498,  498,  498,  498,  498,  518,  427,
      518,  427,  498,  498,  498,  498,  498,  427,  518,  442,
      498,  498,  498,  498,  427,  442,  498,  498,  498,  498,
      427,  442,  498,  498,  498,  498,  427,  442,  498,  498,
      498,  442,  498,  498,  498,  498,  498,  498,  498,  498,
        0,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  481,  481,  481,  481,

      481,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  481,  481,  481
    } ;

static yyconst short int yy_nxt[2462] =
    {   0,
        8,    9,   10,    9,    9,    9,   11,   12,   13,   14,
        8,    8,   15,    8,    8,   16,   17,   18,   19,   20,
       21,    8,   22,    8,    8,    8,   23,   24,   25,   26,
       26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   26,   27,   26,   26,   26,   26,   26,   26,
       28,   26,   26,   26,   26,   26,    8,   29,   30,   26,
       31,  156,   31,   37,   37,   37,   37,   37,   41,   32,
       52,   32,   37,   37,   37,   37,   37,   38,   38,   38,
       38,   38,   33,   34,   33,   34,   43,  132,   42,   44,
       41,   97,   97,   53,  135,   35,   45,   35,   94,   47,

       47,   47,   47,   47,   47,   50,   54,   94,   82,   52,
       97,   98,   96,   41,   39,   41,   55,   94,   83,  156,
      100,   96,   52,   85,  156,   94,   86,  161,   50,   87,
       94,   96,   57,   88,   89,   42,   90,  481,   99,   96,
      481,   58,   61,   92,   96,   53,  132,   45,  133,   62,
       63,  101,   64,   92,   92,   92,   92,   92,   92,   65,
      104,   66,   67,   67,   68,   69,   70,   67,   71,   72,
       73,   67,   74,   67,   75,   76,   67,   77,   67,   78,
       79,   80,   67,   67,   67,   67,   67,   67,   94,   94,
       94,   67,   97,   98,   37,   37,   37,   37,   37,  481,

      114,   59,   96,   96,   96,   38,   38,   38,   38,   38,
      114,  114,  114,  114,  114,  114,  116,  156,  106,   94,
      105,  107,   97,   98,   67,  119,  116,  116,  116,  116,
      116,  116,  118,   96,  158,  119,  119,  119,  119,  119,
      119,   92,   39,   40,   40,   40,  109,   94,  132,  111,
      132,   92,   92,   92,   92,   92,   92,  132,  156,  196,
      128,   96,  112,  134,  188,  160,  132,  132,  126,  113,
      138,  132,  112,  112,  112,  112,  112,  112,   49,   49,
       49,  120,  136,  132,  132,  139,  148,  140,  130,  122,
      149,  132,  156,  137,  141,   97,  144,  123,  130,  130,

      130,  130,  130,  130,  124,  132,  132,  123,  123,  123,
      123,  123,  123,  132,  150,  481,  132,  154,  145,  156,
      142,  156,   94,  156,  162,   83,  143,  154,  154,  154,
      154,  154,  154,  157,  159,  146,   96,  132,  156,  147,
      194,   40,   94,  156,  195,  201,   41,  165,   41,   41,
      152,   91,   91,   91,   91,   91,   96,  165,  165,  165,
      165,  165,  165,   94,   94,   94,   42,  156,   42,   42,
      163,  167,   94,   94,   94,   94,   41,   96,   96,   96,
      163,  163,  163,  163,  163,  163,   96,   96,   96,   96,
      132,   50,  169,  172,   94,  132,  132,  170,   41,  193,

      171,  168,  169,  169,  169,  169,  169,  169,   96,  175,
      173,   49,  132,   50,  192,  156,  199,  156,  197,   41,
      179,   41,  174,  110,  177,  177,  177,  110,  132,   41,
      179,  179,  179,  179,  179,  179,   50,  156,  156,   42,
      205,  156,  178,  198,  208,  235,  156,  156,   94,   42,
      156,  156,  178,  178,  178,  178,  178,  178,   40,   40,
       40,  109,   96,  206,  111,  209,  186,  156,  182,  207,
      229,   94,  213,  406,  188,  156,  210,  112,  182,  182,
      182,  182,  182,  182,  113,   96,   96,  112,  112,  112,
      112,  112,  112,  115,  115,  115,  115,  115,  214,  156,

      156,  132,  196,  183,  132,  218,  216,   94,  232,  132,
      233,  156,  180,  183,  183,  183,  183,  183,  183,   96,
      213,   96,  180,  180,  180,  180,  180,  180,  121,  184,
      184,  184,  121,  239,   96,  156,  156,  156,  191,   41,
      156,   94,  156,  242,  243,  274,  241,  185,  191,  191,
      191,  191,  191,  191,   50,   96,   41,  185,  185,  185,
      185,  185,  185,   49,   49,   49,  120,   94,  272,  214,
      379,   50,  214,  204,  122,  132,   94,  248,  156,  214,
      280,   96,  123,  204,  204,  204,  204,  204,  204,  124,
       96,  234,  123,  123,  123,  123,  123,  123,  129,  129,

      129,  129,  129,  227,  156,  156,  156,  156,  211,  156,
      347,  156,  156,  309,  348,  306,  447,  189,  211,  211,
      211,  211,  211,  211,  132,  238,  240,  189,  189,  189,
      189,  189,  189,  153,  153,  153,  153,  153,  156,   94,
       94,  132,  156,  156,  156,  156,  167,   94,  373,  374,
      310,  268,  202,   96,   96,  156,  267,  156,  156,  156,
       94,   96,  202,  202,  202,  202,  202,  202,  164,  164,
      164,  164,  164,  156,   96,  286,  271,  273,  221,  275,
      387,  219,  367,  303,  357,  264,  356,  212,  221,  221,
      221,  221,  221,  221,  222,  287,  286,  212,  212,  212,

      212,  212,  212,  223,  222,  222,  222,  222,  222,  222,
      156,  289,  156,  223,  223,  223,  223,  223,  223,  181,
      181,  181,  181,  181,  371,  214,  286,  214,  156,  225,
      312,  399,  311,  317,  156,  352,  355,  354,  224,  225,
      225,  225,  225,  225,  225,  226,  287,  286,  224,  224,
      224,  224,  224,  224,  230,  226,  226,  226,  226,  226,
      226,  286,  289,  156,  230,  230,  230,  230,  230,  230,
      190,  190,  190,  190,  190,  284,  284,  284,  284,  284,
      236,  287,  445,  322,  322,  322,  322,  322,  255,  231,
      236,  236,  236,  236,  236,  236,  323,  156,  156,  231,

      231,  231,  231,  231,  231,  203,  203,  203,  203,  203,
      322,  322,  322,  322,  322,  244,  156,  353,   94,  343,
      346,  436,  340,  323,  237,  244,  244,  244,  244,  244,
      244,  245,   96,  286,  237,  237,  237,  237,  237,  237,
      246,  245,  245,  245,  245,  245,  245,  156,  289,  156,
      246,  246,  246,  246,  246,  246,  251,  251,  251,  251,
      251,  258,  253,  156,   94,  286,  286,  254,  432,  255,
      388,  258,  258,  258,  258,  258,  258,  259,   96,  285,
      156,  118,  256,  260,  286,  287,  287,  259,  259,  259,
      259,  259,  259,  260,  260,  260,  260,  260,  260,  261,

      156,  156,  369,  397,  287,  262,  335,  394,  395,  261,
      261,  261,  261,  261,  261,  262,  262,  262,  262,  262,
      262,  263,  115,  115,  115,  115,  115,  265,  156,  286,
      286,  263,  263,  263,  263,  263,  263,  265,  265,  265,
      265,  265,  265,  266,  289,  289,  156,  156,  118,  269,
      435,  424,  407,  266,  266,  266,  266,  266,  266,  269,
      269,  269,  269,  269,  269,  270,  129,  129,  129,  129,
      129,  276,  321,  156,   94,  270,  270,  270,  270,  270,
      270,  276,  276,  276,  276,  276,  276,  277,   96,  156,
      320,  380,  132,  278,  156,  446,  396,  277,  277,  277,

      277,  277,  277,  278,  278,  278,  278,  278,  278,  251,
      251,  251,  251,  251,  434,  253,  319,  156,  403,  156,
      254,  288,  255,  284,  284,  284,  284,  284,  297,  481,
       94,  286,   96,  408,  481,  256,  255,  459,  297,  297,
      297,  297,  297,  297,   96,  156,  289,  156,  156,  256,
      284,  284,  284,  284,  290,  398,  292,  156,  419,  409,
      298,  292,  292,  293,  393,  420,  318,  156,  156,  294,
      298,  298,  298,  298,  298,  298,  295,  299,  421,  294,
      294,  294,  294,  294,  294,  300,  156,  299,  299,  299,
      299,  299,  299,  301,  132,  300,  300,  300,  300,  300,

      300,  302,  433,  301,  301,  301,  301,  301,  301,  304,
      296,  302,  302,  302,  302,  302,  302,  305,  283,  304,
      304,  304,  304,  304,  304,  307,  282,  305,  305,  305,
      305,  305,  305,  308,  281,  307,  307,  307,  307,  307,
      307,  313,  156,  308,  308,  308,  308,  308,  308,  314,
      132,  313,  313,  313,  313,  313,  313,  315,  156,  314,
      314,  314,  314,  314,  314,  422,  156,  315,  315,  315,
      315,  315,  315,  285,  285,  285,  324,  156,  156,  326,
      410,  156,  404,  156,  474,  405,  411,  284,  284,  284,
      284,  284,  327,  481,  156,  418,  156,  454,  481,  328,

      255,  423,  327,  327,  327,  327,  327,  327,  288,  288,
      288,  329,  156,  256,  156,  438,  465,  156,  132,  331,
      284,  284,  284,  284,  284,  425,  481,  332,  156,  156,
      156,  481,  451,  255,  333,  437,  443,  332,  332,  332,
      332,  332,  332,  229,  257,  156,  256,  284,  284,  284,
      284,  284,  156,  481,  156,  444,  156,  470,  481,  471,
      255,  284,  284,  284,  284,  284,  336,  481,  452,  156,
      475,  453,  481,  256,  255,  156,  336,  336,  336,  336,
      336,  336,  428,  428,  428,  428,  428,  256,  290,  290,
      290,  290,  290,  156,  481,  429,  466,  250,  337,  481,

      457,  255,  153,  153,  153,  153,  153,  334,  337,  337,
      337,  337,  337,  337,  256,  249,  156,  334,  334,  334,
      334,  334,  334,  284,  284,  284,  284,  290,  156,  292,
      156,  156,  132,  338,  292,  292,  293,  458,  460,  156,
      132,  132,  294,  338,  338,  338,  338,  338,  338,  295,
      339,  132,  294,  294,  294,  294,  294,  294,  341,  469,
      339,  339,  339,  339,  339,  339,  342,  156,  341,  341,
      341,  341,  341,  341,  344,  132,  342,  342,  342,  342,
      342,  342,  345,  229,  344,  344,  344,  344,  344,  344,
      473,  156,  345,  345,  345,  345,  345,  345,   91,   91,

       91,   91,   91,  349,  481,  481,  481,  481,  481,  156,
       94,  463,  480,  349,  349,  349,  349,  349,  349,  350,
      481,  156,  156,  479,   96,  118,  220,  478,  217,  350,
      350,  350,  350,  350,  350,  358,  322,  322,  322,  358,
      166,  286,  464,  362,  322,  322,  322,  362,  359,  156,
      156,  156,  156,  200,  286,  132,  363,  476,  477,  132,
      366,  287,  325,  360,  360,  360,  325,  132,  286,  289,
      366,  366,  366,  366,  366,  366,  358,  322,  322,  322,
      358,  361,  286,  181,  181,  181,  181,  181,  287,  359,
      132,  361,  361,  361,  361,  361,  361,  285,  285,  285,

      324,  132,  287,  326,  132,  132,  132,   40,  132,  118,
      132,  190,  190,  190,  190,  190,  327,   40,   40,   40,
       40,   40,   40,  328,  132,  132,  327,  327,  327,  327,
      327,  327,  330,  364,  364,  364,  330,  132,  128,  118,
      118,  176,  368,  286,  166,  203,  203,  203,  203,  203,
      156,  365,  368,  368,  368,  368,  368,  368,  289,  151,
      132,  365,  365,  365,  365,  365,  365,  288,  288,  288,
      329,  156,  132,   59,   65,   61,  128,   49,  331,  125,
      118,  108,  103,  102,   93,   81,  332,   49,   49,   49,
       49,   49,   49,  333,  370,   60,  332,  332,  332,  332,

      332,  332,  372,   59,  370,  370,  370,  370,  370,  370,
       51,   48,  372,  372,  372,  372,  372,  372,  164,  164,
      164,  164,  164,  375,  481,   36,   36,  481,  481,  481,
       94,  481,  481,  375,  375,  375,  375,  375,  375,  376,
      481,  481,  481,  481,   96,  481,  481,  481,  481,  376,
      376,  376,  376,  376,  376,  362,  322,  322,  322,  362,
      377,  481,  481,  481,  481,  481,  286,  481,  363,  481,
      377,  377,  377,  377,  377,  377,  378,  481,  481,  156,
      481,  289,  481,  481,  481,  381,  378,  378,  378,  378,
      378,  378,  382,  481,  383,  389,  481,  481,  481,  384,

      385,  390,  481,  386,  481,  389,  389,  389,  389,  389,
      389,  390,  390,  390,  390,  390,  390,  391,  481,  481,
      481,  481,  481,  392,  481,  481,  481,  391,  391,  391,
      391,  391,  391,  392,  392,  392,  392,  392,  392,  400,
      481,  481,  481,  481,  481,  401,  481,  481,  481,  400,
      400,  400,  400,  400,  400,  401,  401,  401,  401,  401,
      401,  402,  481,  481,  481,  481,  481,  412,  481,  481,
      481,  402,  402,  402,  402,  402,  402,  412,  412,  412,
      412,  412,  412,  413,  481,  481,  481,  481,  481,  252,
      481,  481,  481,  413,  413,  413,  413,  413,  413,  252,

      252,  252,  252,  252,  252,  414,  414,  414,  414,  414,
      481,  481,  285,  481,  481,  481,  481,  481,  481,  481,
      481,  415,  285,  285,  285,  285,  285,  285,  288,  481,
      481,  416,  414,  414,  414,  414,  414,  481,  288,  288,
      288,  288,  288,  288,  481,  481,  481,  481,  415,  427,
      481,  481,  428,  428,  428,  428,  428,  481,  416,  427,
      427,  427,  427,  427,  427,  429,  428,  428,  428,  428,
      428,  481,  428,  428,  428,  428,  428,  481,  431,  429,
      481,  481,  481,  481,  481,  429,  481,  481,  481,  442,
      481,  481,  431,  439,  439,  439,  439,  439,  431,  442,

      442,  442,  442,  442,  442,  481,  429,  428,  428,  428,
      428,  428,  440,  481,  481,  481,  481,  481,  481,  431,
      429,  481,  440,  440,  440,  440,  440,  440,  448,  481,
      481,  481,  481,  431,  481,  481,  481,  481,  448,  448,
      448,  448,  448,  448,  428,  428,  428,  428,  428,  455,
      481,  481,  428,  428,  428,  428,  428,  429,  481,  455,
      455,  455,  455,  455,  455,  429,  481,  481,  481,  456,
      431,  449,  449,  449,  449,  449,  481,  481,  431,  456,
      456,  456,  456,  456,  456,  481,  481,  481,  481,  481,
      450,  481,  481,  481,  481,  481,  461,  481,  481,  481,

      450,  450,  450,  450,  450,  450,  461,  461,  461,  461,
      461,  461,  462,  481,  481,  481,  481,  481,  467,  481,
      481,  481,  462,  462,  462,  462,  462,  462,  467,  467,
      467,  467,  467,  467,  468,  481,  481,  481,  481,  481,
      430,  481,  481,  481,  468,  468,  468,  468,  468,  468,
      430,  430,  430,  430,  430,  430,  472,  481,  481,  481,
      481,  481,  430,  481,  481,  481,  472,  472,  472,  472,
      472,  472,  430,  430,  430,  430,  430,  430,   40,  481,
       40,   40,   40,   40,   40,   40,   40,   40,   40,   46,
       46,  481,   46,   46,   49,  481,   49,   49,   49,   49,

       49,   49,   49,   49,   49,   56,   56,  481,   56,   56,
       84,  481,  481,   84,   84,   91,   91,   91,   91,   91,
       91,   91,   91,   91,   95,  481,   95,   95,  481,   95,
       95,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  115,  115,  115,  115,  115,  115,  115,  115,
      115,  117,  117,  481,  117,  117,  121,  121,  121,  121,
      121,  121,  121,  121,  121,  121,  121,  127,  127,  127,
      127,  127,  127,  127,  127,  127,  127,  127,  127,   67,
       67,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      131,  131,  481,  131,  131,  153,  153,  153,  153,  153,

      153,  153,  153,  153,  155,  155,  481,  155,  155,  164,
      164,  164,  164,  164,  164,  164,  164,  164,  181,  181,
      181,  181,  181,  181,  181,  181,  181,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  190,
      190,  190,  190,  190,  190,  190,  190,  190,  203,  203,
      203,  203,  203,  203,  203,  203,  203,  215,  215,  215,
      481,  215,  228,  228,  228,  228,  228,  228,  228,  228,
      228,  228,  228,  228,  247,  247,  247,  481,  247,  252,
      252,  252,  252,  481,  252,  252,  252,  252,  252,  252,
      279,  279,  279,  481,  279,  285,  481,  285,  285,  285,

      285,  285,  285,  285,  285,  285,  288,  481,  288,  288,
      288,  288,  288,  288,  288,  288,  288,  291,  291,  291,
      291,  291,  291,  291,  291,  291,  291,  291,  316,  316,
      316,  481,  316,  325,  325,  325,  325,  325,  325,  325,
      325,  325,  325,  325,  330,  330,  330,  330,  330,  330,
      330,  330,  330,  330,  330,  351,  351,  351,  481,  351,
      417,  417,  417,  481,  481,  481,  417,  481,  481,  417,
      417,  426,  426,  426,  426,  426,  426,  426,  426,  426,
      430,  430,  430,  481,  481,  430,  430,  430,  481,  430,
      430,  441,  441,  441,  441,  441,  441,  441,  441,  441,

        7,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481
    } ;

static yyconst short int yy_chk[2462] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        3,  480,    4,    9,    9,    9,    9,    9,   12,    3,
       17,    4,   10,   10,   10,   10,   10,   11,   11,   11,
       11,   11,    3,    3,    4,    4,   13,   69,   12,   13,
       15,   53,   53,   17,   69,    3,   13,    4,   26,   13,

       13,   13,   13,   13,   13,   15,   18,   27,   23,   18,
       27,   27,   26,   49,   11,   40,   18,   28,   23,  477,
       28,   27,   52,   23,   89,   56,   23,   89,   49,   23,
       32,   28,   18,   23,   23,   40,   23,   43,   27,   56,
       43,   18,   21,   24,   32,   52,   66,   43,   66,   21,
       21,   28,   21,   24,   24,   24,   24,   24,   24,   21,
       32,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   21,   21,
       21,   21,   21,   21,   21,   21,   21,   21,   34,   33,
       36,   21,   33,   33,   37,   37,   37,   37,   37,   59,

       44,   59,   34,   33,   36,   38,   38,   38,   38,   38,
       44,   44,   44,   44,   44,   44,   45,   86,   34,   57,
       33,   36,   57,   57,   59,   47,   45,   45,   45,   45,
       45,   45,   47,   57,   86,   47,   47,   47,   47,   47,
       47,   55,   38,   42,   42,   42,   42,   58,   68,   42,
       71,   55,   55,   55,   55,   55,   55,   72,   88,  144,
      128,   58,   42,   68,  128,   88,  144,   70,   58,   42,
       71,   73,   42,   42,   42,   42,   42,   42,   50,   50,
       50,   50,   70,   78,   74,   72,   78,   73,   65,   50,
       78,   80,  470,   70,   74,   76,   76,   50,   65,   65,

       65,   65,   65,   65,   50,   75,   76,   50,   50,   50,
       50,   50,   50,   77,   80,   82,  141,   83,   77,   87,
       75,   90,   91,   85,   90,   82,   75,   83,   83,   83,
       83,   83,   83,   85,   87,   77,   91,  138,  152,   77,
      138,  109,   95,  464,  141,  152,  109,   96,  110,  111,
       82,   92,   92,   92,   92,   92,   95,   96,   96,   96,
       96,   96,   96,   92,   98,   99,  109,  459,  110,  111,
       92,   98,  101,  104,  105,  107,  121,   92,   98,   99,
       92,   92,   92,   92,   92,   92,  101,  104,  105,  107,
      135,  121,  100,  104,  106,  133,  150,  100,  122,  135,

      101,   99,  100,  100,  100,  100,  100,  100,  106,  107,
      105,  120,  148,  122,  133,  443,  150,  437,  148,  177,
      114,  120,  106,  112,  112,  112,  112,  112,  149,  112,
      114,  114,  114,  114,  114,  114,  120,  157,  160,  177,
      157,  201,  112,  149,  160,  201,  395,  158,  126,  112,
      161,  159,  112,  112,  112,  112,  112,  112,  113,  113,
      113,  113,  126,  158,  113,  161,  126,  162,  118,  159,
      229,  164,  168,  395,  229,  432,  162,  113,  118,  118,
      118,  118,  118,  118,  113,  164,  168,  113,  113,  113,
      113,  113,  113,  116,  116,  116,  116,  116,  169,  422,

      388,  192,  196,  119,  194,  171,  169,  172,  192,  196,
      194,  206,  116,  119,  119,  119,  119,  119,  119,  171,
      173,  172,  116,  116,  116,  116,  116,  116,  123,  123,
      123,  123,  123,  206,  173,  208,  209,  210,  132,  123,
      387,  175,  241,  209,  210,  241,  208,  123,  132,  132,
      132,  132,  132,  132,  123,  175,  184,  123,  123,  123,
      123,  123,  123,  124,  124,  124,  124,  219,  239,  215,
      367,  184,  247,  156,  124,  199,  186,  215,  239,  351,
      247,  219,  124,  156,  156,  156,  156,  156,  156,  124,
      186,  199,  124,  124,  124,  124,  124,  124,  130,  130,

      130,  130,  130,  186,  268,  205,  271,  310,  163,  207,
      310,  312,  438,  271,  312,  268,  438,  130,  163,  163,
      163,  163,  163,  163,  130,  205,  207,  130,  130,  130,
      130,  130,  130,  154,  154,  154,  154,  154,  235,  167,
      174,  232,  272,  347,  348,  346,  167,  264,  347,  348,
      272,  235,  154,  167,  174,  238,  232,  240,  242,  154,
      227,  264,  154,  154,  154,  154,  154,  154,  165,  165,
      165,  165,  165,  373,  227,  253,  238,  240,  178,  242,
      373,  174,  335,  264,  321,  227,  320,  165,  178,  178,
      178,  178,  178,  178,  179,  253,  254,  165,  165,  165,

      165,  165,  165,  180,  179,  179,  179,  179,  179,  179,
      273,  254,  275,  180,  180,  180,  180,  180,  180,  182,
      182,  182,  182,  182,  343,  279,  285,  316,  386,  183,
      275,  386,  273,  279,  343,  316,  319,  318,  182,  183,
      183,  183,  183,  183,  183,  185,  285,  288,  182,  182,
      182,  182,  182,  182,  189,  185,  185,  185,  185,  185,
      185,  325,  288,  435,  189,  189,  189,  189,  189,  189,
      191,  191,  191,  191,  191,  284,  284,  284,  284,  284,
      202,  325,  435,  286,  286,  286,  286,  286,  284,  191,
      202,  202,  202,  202,  202,  202,  286,  306,  309,  191,

      191,  191,  191,  191,  191,  204,  204,  204,  204,  204,
      322,  322,  322,  322,  322,  211,  423,  317,  303,  306,
      309,  423,  303,  322,  204,  211,  211,  211,  211,  211,
      211,  212,  303,  330,  204,  204,  204,  204,  204,  204,
      214,  212,  212,  212,  212,  212,  212,  418,  330,  311,
      214,  214,  214,  214,  214,  214,  218,  218,  218,  218,
      218,  221,  218,  374,  340,  359,  360,  218,  418,  218,
      374,  221,  221,  221,  221,  221,  221,  222,  340,  324,
      384,  301,  218,  223,  324,  359,  360,  222,  222,  222,
      222,  222,  222,  223,  223,  223,  223,  223,  223,  224,

      381,  382,  340,  384,  324,  225,  296,  381,  382,  224,
      224,  224,  224,  224,  224,  225,  225,  225,  225,  225,
      225,  226,  337,  337,  337,  337,  337,  230,  410,  363,
      364,  226,  226,  226,  226,  226,  226,  230,  230,  230,
      230,  230,  230,  231,  363,  364,  396,  421,  337,  236,
      421,  410,  396,  231,  231,  231,  231,  231,  231,  236,
      236,  236,  236,  236,  236,  237,  341,  341,  341,  341,
      341,  244,  283,  436,  369,  237,  237,  237,  237,  237,
      237,  244,  244,  244,  244,  244,  244,  245,  369,  383,
      282,  369,  341,  246,  420,  436,  383,  245,  245,  245,

      245,  245,  245,  246,  246,  246,  246,  246,  246,  251,
      251,  251,  251,  251,  420,  251,  281,  453,  393,  397,
      251,  329,  251,  252,  252,  252,  252,  252,  258,  252,
      380,  329,  393,  397,  252,  251,  252,  453,  258,  258,
      258,  258,  258,  258,  380,  398,  329,  405,  385,  252,
      256,  256,  256,  256,  256,  385,  256,  406,  405,  398,
      259,  256,  256,  256,  380,  406,  280,  407,  274,  256,
      259,  259,  259,  259,  259,  259,  256,  260,  407,  256,
      256,  256,  256,  256,  256,  261,  419,  260,  260,  260,
      260,  260,  260,  262,  267,  261,  261,  261,  261,  261,

      261,  263,  419,  262,  262,  262,  262,  262,  262,  265,
      257,  263,  263,  263,  263,  263,  263,  266,  250,  265,
      265,  265,  265,  265,  265,  269,  249,  266,  266,  266,
      266,  266,  266,  270,  248,  269,  269,  269,  269,  269,
      269,  276,  243,  270,  270,  270,  270,  270,  270,  277,
      234,  276,  276,  276,  276,  276,  276,  278,  408,  277,
      277,  277,  277,  277,  277,  408,  399,  278,  278,  278,
      278,  278,  278,  287,  287,  287,  287,  394,  471,  287,
      399,  404,  394,  447,  471,  394,  399,  290,  290,  290,
      290,  290,  287,  290,  409,  404,  458,  447,  290,  287,

      290,  409,  287,  287,  287,  287,  287,  287,  289,  289,
      289,  289,  425,  290,  411,  425,  458,  444,  233,  289,
      291,  291,  291,  291,  291,  411,  291,  289,  424,  433,
      465,  291,  444,  291,  289,  424,  433,  289,  289,  289,
      289,  289,  289,  228,  220,  445,  291,  292,  292,  292,
      292,  292,  434,  292,  446,  434,  473,  465,  292,  466,
      292,  293,  293,  293,  293,  293,  297,  293,  445,  466,
      473,  446,  293,  292,  293,  460,  297,  297,  297,  297,
      297,  297,  428,  428,  428,  428,  428,  293,  294,  294,
      294,  294,  294,  451,  294,  428,  460,  217,  299,  294,

      451,  294,  344,  344,  344,  344,  344,  294,  299,  299,
      299,  299,  299,  299,  294,  216,  203,  294,  294,  294,
      294,  294,  294,  295,  295,  295,  295,  295,  344,  295,
      452,  454,  198,  300,  295,  295,  295,  452,  454,  463,
      197,  195,  295,  300,  300,  300,  300,  300,  300,  295,
      302,  193,  295,  295,  295,  295,  295,  295,  304,  463,
      302,  302,  302,  302,  302,  302,  305,  469,  304,  304,
      304,  304,  304,  304,  307,  190,  305,  305,  305,  305,
      305,  305,  308,  187,  307,  307,  307,  307,  307,  307,
      469,  479,  308,  308,  308,  308,  308,  308,  313,  313,

      313,  313,  313,  314,  415,  415,  415,  415,  415,  478,
      313,  457,  479,  314,  314,  314,  314,  314,  314,  315,
      415,  457,  476,  478,  313,  181,  176,  476,  170,  315,
      315,  315,  315,  315,  315,  326,  326,  326,  326,  326,
      166,  326,  457,  331,  331,  331,  331,  331,  326,  155,
      474,  475,  153,  151,  331,  147,  331,  474,  475,  146,
      334,  326,  327,  327,  327,  327,  327,  145,  327,  331,
      334,  334,  334,  334,  334,  334,  358,  358,  358,  358,
      358,  327,  358,  368,  368,  368,  368,  368,  327,  358,
      143,  327,  327,  327,  327,  327,  327,  328,  328,  328,

      328,  142,  358,  328,  140,  139,  137,  336,  136,  368,
      134,  370,  370,  370,  370,  370,  328,  336,  336,  336,
      336,  336,  336,  328,  131,  129,  328,  328,  328,  328,
      328,  328,  332,  332,  332,  332,  332,  370,  127,  117,
      115,  108,  338,  332,   97,  372,  372,  372,  372,  372,
       84,  332,  338,  338,  338,  338,  338,  338,  332,   81,
       79,  332,  332,  332,  332,  332,  332,  333,  333,  333,
      333,  372,   67,   63,   62,   61,   60,  339,  333,   54,
       46,   39,   30,   29,   25,   22,  333,  339,  339,  339,
      339,  339,  339,  333,  342,   20,  333,  333,  333,  333,

      333,  333,  345,   19,  342,  342,  342,  342,  342,  342,
       16,   14,  345,  345,  345,  345,  345,  345,  349,  349,
      349,  349,  349,  350,    7,    6,    5,    0,    0,    0,
      349,    0,    0,  350,  350,  350,  350,  350,  350,  361,
        0,    0,    0,    0,  349,    0,    0,    0,    0,  361,
      361,  361,  361,  361,  361,  362,  362,  362,  362,  362,
      365,    0,    0,    0,    0,    0,  362,    0,  362,    0,
      365,  365,  365,  365,  365,  365,  366,    0,    0,  371,
        0,  362,    0,    0,    0,  371,  366,  366,  366,  366,
      366,  366,  371,    0,  371,  375,    0,    0,    0,  371,

      371,  376,    0,  371,    0,  375,  375,  375,  375,  375,
      375,  376,  376,  376,  376,  376,  376,  377,    0,    0,
        0,    0,    0,  378,    0,    0,    0,  377,  377,  377,
      377,  377,  377,  378,  378,  378,  378,  378,  378,  390,
        0,    0,    0,    0,    0,  391,    0,    0,    0,  390,
      390,  390,  390,  390,  390,  391,  391,  391,  391,  391,
      391,  392,    0,    0,    0,    0,    0,  400,    0,    0,
        0,  392,  392,  392,  392,  392,  392,  400,  400,  400,
      400,  400,  400,  401,    0,    0,    0,    0,    0,  402,
        0,    0,    0,  401,  401,  401,  401,  401,  401,  402,

      402,  402,  402,  402,  402,  403,  403,  403,  403,  403,
        0,    0,  412,    0,    0,    0,    0,    0,    0,    0,
        0,  403,  412,  412,  412,  412,  412,  412,  413,    0,
        0,  403,  414,  414,  414,  414,  414,    0,  413,  413,
      413,  413,  413,  413,    0,    0,    0,    0,  414,  416,
        0,    0,  417,  417,  417,  417,  417,    0,  414,  416,
      416,  416,  416,  416,  416,  417,  426,  426,  426,  426,
      426,    0,  430,  430,  430,  430,  430,    0,  417,  426,
        0,    0,    0,    0,    0,  430,    0,    0,    0,  431,
        0,    0,  426,  427,  427,  427,  427,  427,  430,  431,

      431,  431,  431,  431,  431,    0,  427,  439,  439,  439,
      439,  439,  427,    0,    0,    0,    0,    0,    0,  427,
      439,    0,  427,  427,  427,  427,  427,  427,  440,    0,
        0,    0,    0,  439,    0,    0,    0,    0,  440,  440,
      440,  440,  440,  440,  441,  441,  441,  441,  441,  448,
        0,    0,  449,  449,  449,  449,  449,  441,    0,  448,
      448,  448,  448,  448,  448,  449,    0,    0,    0,  450,
      441,  442,  442,  442,  442,  442,    0,    0,  449,  450,
      450,  450,  450,  450,  450,    0,    0,    0,    0,    0,
      442,    0,    0,    0,    0,    0,  455,    0,    0,    0,

      442,  442,  442,  442,  442,  442,  455,  455,  455,  455,
      455,  455,  456,    0,    0,    0,    0,    0,  461,    0,
        0,    0,  456,  456,  456,  456,  456,  456,  461,  461,
      461,  461,  461,  461,  462,    0,    0,    0,    0,    0,
      467,    0,    0,    0,  462,  462,  462,  462,  462,  462,
      467,  467,  467,  467,  467,  467,  468,    0,    0,    0,
        0,    0,  472,    0,    0,    0,  468,  468,  468,  468,
      468,  468,  472,  472,  472,  472,  472,  472,  482,    0,
      482,  482,  482,  482,  482,  482,  482,  482,  482,  483,
      483,    0,  483,  483,  484,    0,  484,  484,  484,  484,

      484,  484,  484,  484,  484,  485,  485,    0,  485,  485,
      486,    0,    0,  486,  486,  487,  487,  487,  487,  487,
      487,  487,  487,  487,  488,    0,  488,  488,    0,  488,
      488,  489,  489,  489,  489,  489,  489,  489,  489,  489,
      489,  489,  490,  490,  490,  490,  490,  490,  490,  490,
      490,  491,  491,    0,  491,  491,  492,  492,  492,  492,
      492,  492,  492,  492,  492,  492,  492,  493,  493,  493,
      493,  493,  493,  493,  493,  493,  493,  493,  493,  494,
      494,  495,  495,  495,  495,  495,  495,  495,  495,  495,
      496,  496,    0,  496,  496,  497,  497,  497,  497,  497,

      497,  497,  497,  497,  498,  498,    0,  498,  498,  499,
      499,  499,  499,  499,  499,  499,  499,  499,  500,  500,
      500,  500,  500,  500,  500,  500,  500,  501,  501,  501,
      501,  501,  501,  501,  501,  501,  501,  501,  501,  502,
      502,  502,  502,  502,  502,  502,  502,  502,  503,  503,
      503,  503,  503,  503,  503,  503,  503,  504,  504,  504,
        0,  504,  505,  505,  505,  505,  505,  505,  505,  505,
      505,  505,  505,  505,  506,  506,  506,    0,  506,  507,
      507,  507,  507,    0,  507,  507,  507,  507,  507,  507,
      508,  508,  508,    0,  508,  509,    0,  509,  509,  509,

      509,  509,  509,  509,  509,  509,  510,    0,  510,  510,
      510,  510,  510,  510,  510,  510,  510,  511,  511,  511,
      511,  511,  511,  511,  511,  511,  511,  511,  512,  512,
      512,    0,  512,  513,  513,  513,  513,  513,  513,  513,
      513,  513,  513,  513,  514,  514,  514,  514,  514,  514,
      514,  514,  514,  514,  514,  515,  515,  515,    0,  515,
      516,  516,  516,    0,    0,    0,  516,    0,    0,  516,
      516,  517,  517,  517,  517,  517,  517,  517,  517,  517,
      518,  518,  518,    0,    0,  518,  518,  518,    0,  518,
      518,  519,  519,  519,  519,  519,  519,  519,  519,  519,

      481,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481
    } ;

#line 1 "<stdin>"
#define INITIAL 0
#define YY_STACK_USED 1
#define mediaquery 1
YY_DECL
	{
	register yy_state_type yy_current_state;
	register UChar *yy_cp, *yy_bp;
	register int yy_act;
	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start;
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				yy_last_accepting_state = yy_current_state;
				yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 482 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 2401 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;




		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yy_hold_char;
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 31 "<stdin>"
{countLines(); /* ignore comments */ }
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 33 "<stdin>"
{countLines(); yyTok = WHITESPACE; return yyTok;}
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 35 "<stdin>"
{yyTok = SGML_CD; return yyTok;}
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 36 "<stdin>"
{yyTok = SGML_CD; return yyTok;}
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 37 "<stdin>"
{yyTok = INCLUDES; return yyTok;}
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 38 "<stdin>"
{yyTok = DASHMATCH; return yyTok;}
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 39 "<stdin>"
{yyTok = BEGINSWITH; return yyTok;}
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 40 "<stdin>"
{yyTok = ENDSWITH; return yyTok;}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 41 "<stdin>"
{yyTok = CONTAINS; return yyTok;}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 42 "<stdin>"
{yyTok = MEDIA_NOT; return yyTok;}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 43 "<stdin>"
{yyTok = MEDIA_ONLY; return yyTok;}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 44 "<stdin>"
{yyTok = MEDIA_AND; return yyTok;}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 45 "<stdin>"
{BEGIN(mediaquery); yyTok = VARIABLES_FOR; return yyTok; }
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 47 "<stdin>"
{yyTok = STRING; return yyTok;}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 48 "<stdin>"
{yyTok = IDENT; return yyTok;}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 49 "<stdin>"
{yyTok = NTH; return yyTok;}
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 51 "<stdin>"
{yyTok = HEX; return yyTok;}
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 52 "<stdin>"
{yyTok = IDSEL; return yyTok;}
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 54 "<stdin>"
{BEGIN(mediaquery); yyTok = IMPORT_SYM; return yyTok;}
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 55 "<stdin>"
{yyTok = PAGE_SYM; return yyTok;}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 56 "<stdin>"
{BEGIN(mediaquery); yyTok = MEDIA_SYM; return yyTok;}
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 57 "<stdin>"
{yyTok = FONT_FACE_SYM; return yyTok;}
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 58 "<stdin>"
{yyTok = CHARSET_SYM; return yyTok;}
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 59 "<stdin>"
{yyTok = NAMESPACE_SYM; return yyTok; }
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 60 "<stdin>"
{yyTok = WEBKIT_RULE_SYM; return yyTok; }
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 61 "<stdin>"
{yyTok = WEBKIT_DECLS_SYM; return yyTok; }
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 62 "<stdin>"
{yyTok = WEBKIT_VALUE_SYM; return yyTok; }
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 63 "<stdin>"
{BEGIN(mediaquery); yyTok = WEBKIT_MEDIAQUERY_SYM; return yyTok; }
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 64 "<stdin>"
{yyTok = WEBKIT_SELECTOR_SYM; return yyTok; }
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 65 "<stdin>"
{BEGIN(mediaquery); yyTok = WEBKIT_VARIABLES_SYM; return yyTok; }
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 66 "<stdin>"
{BEGIN(forkeyword); yyTok = WEBKIT_DEFINE_SYM; return yyTok; }
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 67 "<stdin>"
{ yyTok = WEBKIT_VARIABLES_DECLS_SYM; return yyTok; }
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 68 "<stdin>"
{yyTok = WEBKIT_KEYFRAMES_SYM; return yyTok; }
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 69 "<stdin>"
{yyTok = WEBKIT_KEYFRAME_RULE_SYM; return yyTok; }
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 71 "<stdin>"
{yyTok = ATKEYWORD; return yyTok; }
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 73 "<stdin>"
{yyTok = IMPORTANT_SYM; return yyTok;}
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 75 "<stdin>"
{yyTok = EMS; return yyTok;}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 76 "<stdin>"
{yyTok = REMS; return yyTok;}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 77 "<stdin>"
{yyTok = QEMS; return yyTok;} /* quirky ems */
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 78 "<stdin>"
{yyTok = EXS; return yyTok;}
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 79 "<stdin>"
{yyTok = PXS; return yyTok;}
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 80 "<stdin>"
{yyTok = CMS; return yyTok;}
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 81 "<stdin>"
{yyTok = MMS; return yyTok;}
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 82 "<stdin>"
{yyTok = INS; return yyTok;}
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 83 "<stdin>"
{yyTok = PTS; return yyTok;}
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 84 "<stdin>"
{yyTok = PCS; return yyTok;}
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 85 "<stdin>"
{yyTok = DEGS; return yyTok;}
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 86 "<stdin>"
{yyTok = RADS; return yyTok;}
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 87 "<stdin>"
{yyTok = GRADS; return yyTok;}
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 88 "<stdin>"
{yyTok = TURNS; return yyTok;}
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 89 "<stdin>"
{yyTok = MSECS; return yyTok;}
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 90 "<stdin>"
{yyTok = SECS; return yyTok;}
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 91 "<stdin>"
{yyTok = HERZ; return yyTok;}
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 92 "<stdin>"
{yyTok = KHERZ; return yyTok;}
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 93 "<stdin>"
{yyTok = DIMEN; return yyTok;}
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 94 "<stdin>"
{yyTok = PERCENTAGE; return yyTok;}
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 95 "<stdin>"
{yyTok = INTEGER; return yyTok;}
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 96 "<stdin>"
{yyTok = FLOATTOKEN; return yyTok;}
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 98 "<stdin>"
{yyTok = NOTFUNCTION; return yyTok;}
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 99 "<stdin>"
{yyTok = URI; return yyTok;}
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 100 "<stdin>"
{yyTok = URI; return yyTok;}
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 101 "<stdin>"
{ yyTok = VARCALL; return yyTok; }
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 102 "<stdin>"
{yyTok = FUNCTION; return yyTok;}
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 104 "<stdin>"
{yyTok = UNICODERANGE; return yyTok;}
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 105 "<stdin>"
{yyTok = UNICODERANGE; return yyTok;}
	YY_BREAK
case 66:
#line 108 "<stdin>"
case 67:
YY_RULE_SETUP
#line 108 "<stdin>"
{BEGIN(INITIAL); yyTok = *yytext; return yyTok; }
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 109 "<stdin>"
{yyTok = *yytext; return yyTok;}
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 111 "<stdin>"
ECHO;
	YY_BREAK
case YY_END_OF_BUFFER:
	yy_c_buf_p = yy_cp - 1;
	yy_cp = yy_c_buf_p;
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(mediaquery):
case YY_STATE_EOF(forkeyword):
	yyterminate();

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of yylex */
