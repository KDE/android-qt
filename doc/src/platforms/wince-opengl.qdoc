/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page windowsce-opengl.html
    \title Qt for Windows CE and OpenGL ES
    \ingroup qtce
    \brief Information about support for OpenGL ES with Qt for Windows CE.

    \input platforms/emb-opengl.qdocinc

\section1 Using OpenGL with Qt for Windows CE
Qt for Windows CE uses EGL 1.1 to embed OpenGL ES windows within the
Windows CE window manager.

\section2 Configure

To configure Qt for Windows Mobile 5.0 and OpenGL ES Common support
you can run \c{configure} like this:

    \snippet doc/src/snippets/code/doc_src_wince-opengl.qdoc 0

OpenGL ES includes profiles for floating-point and fixed-point arithmetic.
The floating point profile is called OpenGL ES CM (Common) and the
fixed-point profile is called OpenGL ES CL (Common Lite).
The fixed-point profile is no longer supported since Qt 4.7.

You can run \c{configure} with the \c{-opengl-es-cm} option for the Common
profile.  Ensure that the \c{lib} and \c{includes} paths include the OpenGL ES
headers and libararies from your SDK. The OpenGL ES lib should be called
either \c{libGLES_CM.lib} for the Common profile.

To start programming with Qt and OpenGL ES on Windows CE, you can start
with the \l{Hello GL ES Example}. This example shows how to use QGLWidget
and QGLPainter with OpenGL ES. It also provides some hints on how to port
OpenGL code to OpenGL ES.

\section2 Using OpenGL to Accelerate Normal 2D Painting

Qt provides QOpenGLPaintEngine, a subclass of QPaintEngine that translates
QPainter operations into OpenGL calls. This is especially convenient for
drawing text or QImage objects in an OpenGL ES context. For further
details, refer to the \l{Hello GL ES Example}.

*/
