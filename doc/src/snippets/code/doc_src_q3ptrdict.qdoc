/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights.  These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
**
**
**
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

//! [0]
Q3PtrDict<char> fields; // void* keys, char* values

QLineEdit *le1 = new QLineEdit( this );
le1->setText( "Simpson" );
QLineEdit *le2 = new QLineEdit( this );
le2->setText( "Homer" );
QLineEdit *le3 = new QLineEdit( this );
le3->setText( "45" );

fields.insert( le1, "Surname" );
fields.insert( le2, "Forename" );
fields.insert( le3, "Age" );

Q3PtrDictIterator<char> it( fields );
for( ; it.current(); ++it )
    cout << it.current() << endl;
cout << endl;

if ( fields[le1] ) // Prints "Surname: Simpson"
    cout << fields[le1] << ": " << le1->text() << endl; 
if ( fields[le2] ) // Prints "Forename: Homer"
    cout << fields[le2] << ": " << le2->text() << endl; 

fields.remove( le1 ); // Removes le1 from the dictionary
cout << le1->text() << endl; // Prints "Simpson"
//! [0]


//! [1]
Q3PtrDict<ItemType> dict;
    ...
if ( dict.find( key ) )
    dict.remove( key );
dict.insert( key, item );
//! [1]


//! [2]
Q3PtrDict<char> fields;

QLineEdit *le1 = new QLineEdit( this );
le1->setText( "Simpson" );
QLineEdit *le2 = new QLineEdit( this );
le2->setText( "Homer" );
QLineEdit *le3 = new QLineEdit( this );
le3->setText( "45" );

fields.insert( le1, "Surname" );
fields.insert( le2, "Forename" );
fields.insert( le3, "Age" );

Q3PtrDictIterator<char> it( fields );
for( ; it.current(); ++it ) {
    QLineEdit *le = (QLineEdit)it.currentKey();
    cout << it.current() << ": " << le->text() << endl;
}
cout << endl;

// Output (random order):
//  Forename: Homer
//  Age: 45
//  Surname: Simpson
//! [2]


