/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights.  These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
**
**
**
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

//! [0]
Q3AsciiDict<QLineEdit> fields; // char* keys, QLineEdit* values
fields.insert( "forename", new QLineEdit( this ) );
fields.insert( "surname", new QLineEdit( this ) );

fields["forename"]->setText( "Homer" );
fields["surname"]->setText( "Simpson" );

Q3AsciiDictIterator<QLineEdit> it( fields ); // See Q3AsciiDictIterator
for( ; it.current(); ++it )
    cout << it.currentKey() << ": " << it.current()->text() << endl;
cout << endl;

if ( fields["forename"] && fields["surname"] )
    cout << fields["forename"]->text() << " " 
	<< fields["surname"]->text() << endl;  // Prints "Homer Simpson"

fields.remove( "forename" ); // Does not delete the line edit
if ( ! fields["forename"] )
    cout << "forename is not in the dictionary" << endl;
//! [0]


//! [1]
Q3AsciiDict<char> dict;
    ...
if ( dict.find(key) )
    dict.remove( key );
dict.insert( key, item );
//! [1]


//! [2]
Q3AsciiDict<QLineEdit> fields;
fields.insert( "forename", new QLineEdit( this ) );
fields.insert( "surname", new QLineEdit( this ) );
fields.insert( "age", new QLineEdit( this ) );

fields["forename"]->setText( "Homer" );
fields["surname"]->setText( "Simpson" );
fields["age"]->setText( "45" );

Q3AsciiDictIterator<QLineEdit> it( fields );
for( ; it.current(); ++it )
    cout << it.currentKey() << ": " << it.current()->text() << endl;
cout << endl;

// Output (random order):
//	age: 45
//	surname: Simpson
//	forename: Homer
//! [2]
