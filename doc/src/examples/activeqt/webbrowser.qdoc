/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights.  These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
**
**
**
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example activeqt/webbrowser
    \title Web Browser Example (ActiveQt)

    The Web Browser example uses the Microsoft Web Browser
    ActiveX control to implement a fully functional Web Browser
    application. The user interface has been developed using the Qt
    Designer integration of the QAxWidget class.

    The code demonstrates how the Qt application can communicate 
    with the embedded ActiveX controls using signals, slots and the 
    dynamicCall() function.

    \snippet examples/activeqt/webbrowser/main.cpp 0

    The \c MainWindow class declares a \c QMainWindow based user interface,
    using the \c Ui::MainWindow class generated by Qt Designer. A number
    of slots are implemented to handle events from the various user 
    interface elements, including the \c WebBrowser object, which is a
    QAxWidget hosting the Microsoft Web Browser control.

    \snippet examples/activeqt/webbrowser/main.cpp 1

    The constructor initializes the user interface, installs a
    progress bar on the status bar, and uses QAxBase::dynamicCall()
    to invoke the \c GoHome() method of Internet Explorer to
    navigate  to the user's home page.

    \snippet examples/activeqt/webbrowser/main.cpp 2
    Different slots handle the signals emitted by the WebBrowser object.

    Connections that don't require any coding, i.e. connecting the \c back 
    action to the \c GoBack() slot, have already been made in Qt Designer.

    \snippet examples/activeqt/webbrowser/main.cpp 3
    \snippet examples/activeqt/webbrowser/main.cpp 4

    The rest of the implementation is not related to ActiveQt - the actions
    are handled by different slots, and the entry point function starts the
    application using standard Qt APIs.

    To build the example you must first build the QAxContainer
    library. Then run your make tool in \c
    examples/activeqt/webbrowser and run the resulting \c
    webbrowser.exe.
*/
