/****************************************************************************
**
** Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL$
** No Commercial Usage
** This file contains pre-release code and may not be distributed.
** You may use this file in accordance with the terms and conditions
** contained in the Technology Preview License Agreement accompanying
** this package.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Nokia gives you certain additional
** rights.  These rights are described in the Nokia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** If you have questions regarding the use of this file, please contact
** Nokia at qt-info@nokia.com.
**
**
**
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page qaxserver-demo-multiple.html
    \title Two Simple Qt Widgets

    \input examples/activeqt/multiple-demo.qdocinc
*/

/*!
    \example activeqt/multiple
    \title Multiple Example (ActiveQt)

    The Multiple example demonstrates the implementation of a
    QAxFactory to provide multiple ActiveX controls in a single in
    process ActiveX server using the \c QAXFACTORY_EXPORT() macro.
    The ActiveX controls in this example are simple QWidget
    subclasses that reimplement QWidget::paintEvent().

    \snippet examples/activeqt/multiple/ax1.h 0

    The first control draws a filled rectangle. The fill color is exposed
    as a property. \c Q_CLASSINFO() is used to specify the COM identifiers.

    \snippet examples/activeqt/multiple/ax2.h 0

    The second control draws a circle. The linewith is exposed as a property.
    \c Q_CLASSINFO() is used to specify the COM identifiers, and to set the
    attributes \e ToSuperClass and \e StockEvents to expose only the API of
    the class itself, and to add COM stock events to the ActiveX control.

    \snippet examples/activeqt/multiple/main.cpp 0

    The classes are exported from the server using the QAxFactory macros.

    To build the example you must first build the QAxServer library.
    Then run \c qmake and your make tool in  \c
    examples/activeqt/multiple.

    The \l{qaxserver-demo-multiple.html}{demonstration} requires your
    WebBrowser to support ActiveX controls, and scripting to be
    enabled.

    \snippet examples/activeqt/multiple-demo.qdocinc 0
*/
